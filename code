#include <bits/stdc++.h>
using namespace std;

int solve(int* arr,int k,int n,int ongoing,int*** out)
{
    if(out[k][n][ongoing] != -1)
    {
        return out[k][n][ongoing];
    }
    if(n ==0)
    {
        out[k][n][ongoing] = 0;
        return 0;     
    }
    
    if(ongoing == 1)
    {
        int ans1 = arr[0]+solve(arr+1,k-1,n-1,0,out);
        int ans2 = solve(arr+1,k,n-1,1,out);
        int ans = max(ans1,ans2);
        out[k][n][ongoing] = ans;
        return ans;
    }
    else
    {
        int ans1 = 0;
        if(k>0)
        {
        	ans1 = (-1)*arr[0]+solve(arr+1,k,n-1,1,out);
        }
        int ans2 = solve(arr+1,k,n-1,0,out);
        int ans = max(ans1,ans2);
        out[k][n][ongoing] = ans;
        return ans;
    }
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int k,n;
        cin>>k>>n;
        int * arr = new int[n];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        int*** out = new int**[k+1];
        for(int i = 0;i<k+1;i++)
        {
            out[i] = new int*[n+1];
            for(int j=0;j<=n;j++)
            {
                out[i][j] = new int[2];
                for(int l=0;l<2;l++)
                {
                    out[i][j][l] = -1;
                }
            }
        }
        int ans = solve(arr,k,n,0,out);
        delete[] arr;
        cout<<ans<<endl;
    }
    return 0;
}
